resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: terraform
  type: s3
  source:
    bucket: {{terraform-resources}}
    regexp: terraform
    access_key_id: {{aws_access_key_id}}
    secret_access_key: {{aws_secret_access_key}}

  ## Uncomment the below snippet to only let the pipeline run between midnight and 1am central time.
  ## If a change is detected earlier the pipeline will start but be held up waiting for the time
  ## resource to become available.
  ## Also uncomment the fetching of the resource in the plan below.
  #- name: run-time-window
  #  type: time
  #  source:
  #    start: 12:00 AM
  #    stop: 1:00 AM
  #    location: America/Chicago
- name: tool-om
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: {{github_token}}

- name: pcf-pipelines
  type: git
  source:
    uri: git@github.com:c0-ops/pcf-pipelines
    branch: master
    private_key: {{git_private_key}}

jobs:
- name: upgrade-opsmgr
  plan:
  - aggregate:
## Uncomment to limit when the pipeline can run
#   - get: run-time-window
    - get: pcf-pipelines
    - get: terraform
    - get: tool-om
      globs: om-linux

  - task: export-opsmgr
    file: pcf-pipelines/tasks/export-opsmgr-settings/task.yml
    params:
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_URI: {{opsman_uri}}
      OPSMAN_SETTINGS_FILENAME: installation.zip

  - task: deploy-opsman-vm
    file: pcf-pipelines/tasks/deploy-opsman-vm-aws/task.yml
    params:
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AMI: {{omsman_ami}}
      INSTANCE_TYPE: {{instance_type}}
      KEY_NAME: {{key_name}}
      SUBNET_ID: {{subnet_id}}
      AWS_INSTANCE: {{aws_instance}}
      AWS_INSTANCE_NAME: {{aws_instance_name}}
      OPSMAN_TIMEOUT: {{opsman_timeout}}
      OPSMAN_ADMIN_PASSWORD: {{opsman_admin_password}}
      AWS_REGION: {{aws_region}}
      SECURITY_GROUP: {{security_group}}
      ROUTE53: {{route53}}
      ROUTE53_ZONE_ID: {{route53_zone_id}}
      OPSMAN_SUBDOMAIN: {{opsman_subdomain}}
      OPSMAN_TIMEOUT: {{opsman_timeout}}

  - task: import-opsmgr
    file: pcf-pipelines/tasks/import-opsmgr-settings/task.yml
    params:
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_URI: {{opsman_uri}}
      OPSMAN_SETTINGS_FILENAME: installation.zip
      OPSMAN_PASSPHRASE: {{opsman_passphrase}}

      # todo discuss the order for calling this task
  - task: apply-changes
    file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_URI: {{opsman_uri}}
